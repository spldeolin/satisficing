<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spldeolin.satisficing.identity.app.mapper.User2departmentMapper">
    <!-- [START] Any modifications may be overwritten by future code generations. -->

    <resultMap id="all" type="com.spldeolin.satisficing.identity.app.entity.User2departmentEntity">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="department_id" property="departmentId"/>
        <result column="create_user_uuid" property="createUserUuid"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user_uuid" property="updateUserUuid"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="all">
        `id`, `user_id`, `department_id`, `create_user_uuid`, `create_time`, `update_user_uuid`, `update_time`
    </sql>

    <insert id="insert" parameterType="com.spldeolin.satisficing.identity.app.entity.User2departmentEntity">
        <!-- @formatter:off -->
        INSERT INTO `user2department`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id!=null"> `id`, </if>
            <if test="userId!=null"> `user_id`, </if>
            <if test="departmentId!=null"> `department_id`, </if>
            <if test="createUserUuid!=null"> `create_user_uuid`, </if>
            <if test="createTime!=null"> `create_time`, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid`, </if>
            <if test="updateTime!=null"> `update_time`, </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="id!=null"> #{id}, </if>
            <if test="userId!=null"> #{userId}, </if>
            <if test="departmentId!=null"> #{departmentId}, </if>
            <if test="createUserUuid!=null"> #{createUserUuid}, </if>
            <if test="createTime!=null"> #{createTime}, </if>
            <if test="updateUserUuid!=null"> #{updateUserUuid}, </if>
            <if test="updateTime!=null"> #{updateTime}, </if>
        </trim>
        <!-- @formatter:on -->
    </insert>

    <insert id="batchInsert">
        <!-- @formatter:off -->
        <foreach collection="entities" item="one" separator=";">
            INSERT INTO `user2department`
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="one.id!=null"> `id`, </if>
                <if test="one.userId!=null"> `user_id`, </if>
                <if test="one.departmentId!=null"> `department_id`, </if>
                <if test="one.createUserUuid!=null"> `create_user_uuid`, </if>
                <if test="one.createTime!=null"> `create_time`, </if>
                <if test="one.updateUserUuid!=null"> `update_user_uuid`, </if>
                <if test="one.updateTime!=null"> `update_time`, </if>
            </trim>
            <trim prefix="VALUE (" suffix=")" suffixOverrides=",">
                <if test="one.id!=null"> #{one.id}, </if>
                <if test="one.userId!=null"> #{one.userId}, </if>
                <if test="one.departmentId!=null"> #{one.departmentId}, </if>
                <if test="one.createUserUuid!=null"> #{one.createUserUuid}, </if>
                <if test="one.createTime!=null"> #{one.createTime}, </if>
                <if test="one.updateUserUuid!=null"> #{one.updateUserUuid}, </if>
                <if test="one.updateTime!=null"> #{one.updateTime}, </if>
            </trim>
        </foreach>;
        <!-- @formatter:on -->
    </insert>

    <insert id="batchInsertEvenNull">
        <!-- @formatter:off -->
        INSERT INTO `user2department`
            ( <include refid="all"/> )
        VALUES
            <foreach collection="entities" item="one" separator=",">(
                #{one.id}, #{one.userId}, #{one.departmentId}, #{one.createUserUuid}, #{one.createTime},
                #{one.updateUserUuid}, #{one.updateTime}
            )</foreach>
        <!-- @formatter:on -->
    </insert>

    <update id="batchUpdate">
        <foreach collection="entities" item="one" separator=";">
            <!-- @formatter:off -->
            UPDATE `user2department`
            <set>
                <if test="one.userId!=null"> `user_id` = #{one.userId}, </if>
                <if test="one.departmentId!=null"> `department_id` = #{one.departmentId}, </if>
                <if test="one.createUserUuid!=null"> `create_user_uuid` = #{one.createUserUuid}, </if>
                <if test="one.createTime!=null"> `create_time` = #{one.createTime}, </if>
                <if test="one.updateUserUuid!=null"> `update_user_uuid` = #{one.updateUserUuid}, </if>
                <if test="one.updateTime!=null"> `update_time` = #{one.updateTime}, </if>
            </set>
            WHERE 1 = 1
              AND `id` = #{one.id}
            <!-- @formatter:on -->
        </foreach>
    </update>

    <update id="batchUpdateEvenNull">
        <foreach collection="entities" item="one" separator=";">
            <!-- @formatter:off -->
            UPDATE `user2department`
            SET
                `user_id` = #{one.userId},
                `department_id` = #{one.departmentId},
                `create_user_uuid` = #{one.createUserUuid},
                `create_time` = #{one.createTime},
                `update_user_uuid` = #{one.updateUserUuid},
                `update_time` = #{one.updateTime}
            WHERE 1 = 1
              AND `id` = #{one.id}
            <!-- @formatter:on -->
        </foreach>
    </update>

    <select id="queryById" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          AND `id` = #{id}
        <!-- @formatter:on -->
    </select>

    <update id="updateById" parameterType="com.spldeolin.satisficing.identity.app.entity.User2departmentEntity">
        <!-- @formatter:off -->
        UPDATE `user2department`
        <set>
            <if test="userId!=null"> `user_id` = #{userId}, </if>
            <if test="departmentId!=null"> `department_id` = #{departmentId}, </if>
            <if test="createUserUuid!=null"> `create_user_uuid` = #{createUserUuid}, </if>
            <if test="createTime!=null"> `create_time` = #{createTime}, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid` = #{updateUserUuid}, </if>
            <if test="updateTime!=null"> `update_time` = #{updateTime}, </if>
        </set>
        WHERE 1 = 1
          AND `id` = #{id}
        <!-- @formatter:on -->
    </update>

    <update id="updateByIdEvenNull"
        parameterType="com.spldeolin.satisficing.identity.app.entity.User2departmentEntity">
        <!-- @formatter:off -->
        UPDATE `user2department`
        SET
            `user_id` = #{userId},
            `department_id` = #{departmentId},
            `create_user_uuid` = #{createUserUuid},
            `create_time` = #{createTime},
            `update_user_uuid` = #{updateUserUuid},
            `update_time` = #{updateTime}
        WHERE 1 = 1
          AND `id` = #{id}
        <!-- @formatter:on -->
    </update>

    <select id="queryByIds" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          AND `id` IN (<foreach collection="ids" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByIdsEachId" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          AND `id` IN (<foreach collection="ids" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByUserId" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          AND `user_id` = #{userId}
        <!-- @formatter:on -->
    </select>

    <select id="queryByDepartmentId" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          AND `department_id` = #{departmentId}
        <!-- @formatter:on -->
    </select>

    <update id="deleteByUserId" parameterType="Long">
        <!-- @formatter:off -->
        UPDATE `user2department`
        SET null
        WHERE `user_id` = #{userId}
        <!-- @formatter:on -->
    </update>

    <update id="deleteByDepartmentId" parameterType="Long">
        <!-- @formatter:off -->
        UPDATE `user2department`
        SET null
        WHERE `department_id` = #{departmentId}
        <!-- @formatter:on -->
    </update>

    <select id="queryByUserIds" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          AND `user_id` IN (<foreach collection="userIds" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByDepartmentIds" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          AND `department_id` IN (<foreach collection="departmentIds" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByEntity" parameterType="com.spldeolin.satisficing.identity.app.entity.User2departmentEntity"
        resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
          <if test="id!=null"> AND `id` = #{id} </if>
          <if test="userId!=null"> AND `user_id` = #{userId} </if>
          <if test="departmentId!=null"> AND `department_id` = #{departmentId} </if>
          <if test="createUserUuid!=null"> AND `create_user_uuid` = #{createUserUuid} </if>
          <if test="createTime!=null"> AND `create_time` = #{createTime} </if>
          <if test="updateUserUuid!=null"> AND `update_user_uuid` = #{updateUserUuid} </if>
          <if test="updateTime!=null"> AND `update_time` = #{updateTime} </if>
        <!-- @formatter:on -->
    </select>

    <select id="listAll" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `user2department`
        WHERE 1 = 1
        <!-- @formatter:on -->
    </select>

    <insert id="insertOrUpdate" parameterType="com.spldeolin.satisficing.identity.app.entity.User2departmentEntity">
        <!-- @formatter:off -->
        INSERT INTO `user2department`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id!=null"> `id`, </if>
            <if test="userId!=null"> `user_id`, </if>
            <if test="departmentId!=null"> `department_id`, </if>
            <if test="createUserUuid!=null"> `create_user_uuid`, </if>
            <if test="createTime!=null"> `create_time`, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid`, </if>
            <if test="updateTime!=null"> `update_time`, </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="id!=null"> #{id}, </if>
            <if test="userId!=null"> #{userId}, </if>
            <if test="departmentId!=null"> #{departmentId}, </if>
            <if test="createUserUuid!=null"> #{createUserUuid}, </if>
            <if test="createTime!=null"> #{createTime}, </if>
            <if test="updateUserUuid!=null"> #{updateUserUuid}, </if>
            <if test="updateTime!=null"> #{updateTime}, </if>
        </trim>
        ON DUPLICATE KEY UPDATE
        <trim suffixOverrides=",">
            <if test="userId!=null"> `user_id` = #{userId}, </if>
            <if test="departmentId!=null"> `department_id` = #{departmentId}, </if>
            <if test="createUserUuid!=null"> `create_user_uuid` = #{createUserUuid}, </if>
            <if test="createTime!=null"> `create_time` = #{createTime}, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid` = #{updateUserUuid}, </if>
            <if test="updateTime!=null"> `update_time` = #{updateTime}, </if>
        </trim>
        <!-- @formatter:on -->
    </insert>

    <!-- [END] Any modifications may be overwritten by future code generations. -->
</mapper>