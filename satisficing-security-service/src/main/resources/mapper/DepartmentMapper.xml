<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spldeolin.satisficing.security.service.mapper.DepartmentMapper">
    <!-- [START] Any modifications may be overwritten by future code generations. -->

    <resultMap id="all" type="com.spldeolin.satisficing.security.service.entity.DepartmentEntity">
        <id column="id" property="id"/>
        <result column="department_name" property="departmentName"/>
        <result column="path" property="path"/>
        <result column="parent_id" property="parentId"/>
        <result column="description" property="description"/>
        <result column="create_user_uuid" property="createUserUuid"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user_uuid" property="updateUserUuid"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="all">
        `id`, `department_name`, `path`, `parent_id`, `description`, `create_user_uuid`, `create_time`,
        `update_user_uuid`,
        `update_time`
    </sql>

    <insert id="insert" parameterType="com.spldeolin.satisficing.security.service.entity.DepartmentEntity">
        <!-- @formatter:off -->
        INSERT INTO `department`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id!=null"> `id`, </if>
            <if test="departmentName!=null"> `department_name`, </if>
            <if test="path!=null"> `path`, </if>
            <if test="parentId!=null"> `parent_id`, </if>
            <if test="description!=null"> `description`, </if>
            <if test="createUserUuid!=null"> `create_user_uuid`, </if>
            <if test="createTime!=null"> `create_time`, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid`, </if>
            <if test="updateTime!=null"> `update_time`, </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="id!=null"> #{id}, </if>
            <if test="departmentName!=null"> #{departmentName}, </if>
            <if test="path!=null"> #{path}, </if>
            <if test="parentId!=null"> #{parentId}, </if>
            <if test="description!=null"> #{description}, </if>
            <if test="createUserUuid!=null"> #{createUserUuid}, </if>
            <if test="createTime!=null"> #{createTime}, </if>
            <if test="updateUserUuid!=null"> #{updateUserUuid}, </if>
            <if test="updateTime!=null"> #{updateTime}, </if>
        </trim>
        <!-- @formatter:on -->
    </insert>

    <insert id="batchInsert">
        <!-- @formatter:off -->
        <foreach collection="entities" item="one" separator=";">
            INSERT INTO `department`
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="one.id!=null"> `id`, </if>
                <if test="one.departmentName!=null"> `department_name`, </if>
                <if test="one.path!=null"> `path`, </if>
                <if test="one.parentId!=null"> `parent_id`, </if>
                <if test="one.description!=null"> `description`, </if>
                <if test="one.createUserUuid!=null"> `create_user_uuid`, </if>
                <if test="one.createTime!=null"> `create_time`, </if>
                <if test="one.updateUserUuid!=null"> `update_user_uuid`, </if>
                <if test="one.updateTime!=null"> `update_time`, </if>
            </trim>
            <trim prefix="VALUE (" suffix=")" suffixOverrides=",">
                <if test="one.id!=null"> #{one.id}, </if>
                <if test="one.departmentName!=null"> #{one.departmentName}, </if>
                <if test="one.path!=null"> #{one.path}, </if>
                <if test="one.parentId!=null"> #{one.parentId}, </if>
                <if test="one.description!=null"> #{one.description}, </if>
                <if test="one.createUserUuid!=null"> #{one.createUserUuid}, </if>
                <if test="one.createTime!=null"> #{one.createTime}, </if>
                <if test="one.updateUserUuid!=null"> #{one.updateUserUuid}, </if>
                <if test="one.updateTime!=null"> #{one.updateTime}, </if>
            </trim>
        </foreach>;
        <!-- @formatter:on -->
    </insert>

    <insert id="batchInsertEvenNull">
        <!-- @formatter:off -->
        INSERT INTO `department`
            ( <include refid="all"/> )
        VALUES
            <foreach collection="entities" item="one" separator=",">(
                #{one.id}, #{one.departmentName}, #{one.path}, #{one.parentId}, #{one.description}, #{one.createUserUuid},
                #{one.createTime}, #{one.updateUserUuid}, #{one.updateTime}
            )</foreach>
        <!-- @formatter:on -->
    </insert>

    <update id="batchUpdate">
        <foreach collection="entities" item="one" separator=";">
            <!-- @formatter:off -->
            UPDATE `department`
            <set>
                <if test="one.departmentName!=null"> `department_name` = #{one.departmentName}, </if>
                <if test="one.path!=null"> `path` = #{one.path}, </if>
                <if test="one.parentId!=null"> `parent_id` = #{one.parentId}, </if>
                <if test="one.description!=null"> `description` = #{one.description}, </if>
                <if test="one.createUserUuid!=null"> `create_user_uuid` = #{one.createUserUuid}, </if>
                <if test="one.createTime!=null"> `create_time` = #{one.createTime}, </if>
                <if test="one.updateUserUuid!=null"> `update_user_uuid` = #{one.updateUserUuid}, </if>
                <if test="one.updateTime!=null"> `update_time` = #{one.updateTime}, </if>
            </set>
            WHERE 1 = 1
              AND `id` = #{one.id}
            <!-- @formatter:on -->
        </foreach>
    </update>

    <update id="batchUpdateEvenNull">
        <foreach collection="entities" item="one" separator=";">
            <!-- @formatter:off -->
            UPDATE `department`
            SET
                `department_name` = #{one.departmentName},
                `path` = #{one.path},
                `parent_id` = #{one.parentId},
                `description` = #{one.description},
                `create_user_uuid` = #{one.createUserUuid},
                `create_time` = #{one.createTime},
                `update_user_uuid` = #{one.updateUserUuid},
                `update_time` = #{one.updateTime}
            WHERE 1 = 1
              AND `id` = #{one.id}
            <!-- @formatter:on -->
        </foreach>
    </update>

    <select id="queryById" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `department`
        WHERE 1 = 1
          AND `id` = #{id}
        <!-- @formatter:on -->
    </select>

    <update id="updateById" parameterType="com.spldeolin.satisficing.security.service.entity.DepartmentEntity">
        <!-- @formatter:off -->
        UPDATE `department`
        <set>
            <if test="departmentName!=null"> `department_name` = #{departmentName}, </if>
            <if test="path!=null"> `path` = #{path}, </if>
            <if test="parentId!=null"> `parent_id` = #{parentId}, </if>
            <if test="description!=null"> `description` = #{description}, </if>
            <if test="createUserUuid!=null"> `create_user_uuid` = #{createUserUuid}, </if>
            <if test="createTime!=null"> `create_time` = #{createTime}, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid` = #{updateUserUuid}, </if>
            <if test="updateTime!=null"> `update_time` = #{updateTime}, </if>
        </set>
        WHERE 1 = 1
          AND `id` = #{id}
        <!-- @formatter:on -->
    </update>

    <update id="updateByIdEvenNull" parameterType="com.spldeolin.satisficing.security.service.entity.DepartmentEntity">
        <!-- @formatter:off -->
        UPDATE `department`
        SET
            `department_name` = #{departmentName},
            `path` = #{path},
            `parent_id` = #{parentId},
            `description` = #{description},
            `create_user_uuid` = #{createUserUuid},
            `create_time` = #{createTime},
            `update_user_uuid` = #{updateUserUuid},
            `update_time` = #{updateTime}
        WHERE 1 = 1
          AND `id` = #{id}
        <!-- @formatter:on -->
    </update>

    <select id="queryByIds" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `department`
        WHERE 1 = 1
          AND `id` IN (<foreach collection="ids" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByIdsEachId" parameterType="Long" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `department`
        WHERE 1 = 1
          AND `id` IN (<foreach collection="ids" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByParentId" parameterType="String" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `department`
        WHERE 1 = 1
          AND `parent_id` = #{parentId}
        <!-- @formatter:on -->
    </select>

    <update id="deleteByParentId" parameterType="String">
        <!-- @formatter:off -->
        UPDATE `department`
        SET null
        WHERE `parent_id` = #{parentId}
        <!-- @formatter:on -->
    </update>

    <select id="queryByParentIds" parameterType="String" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `department`
        WHERE 1 = 1
          AND `parent_id` IN (<foreach collection="parentIds" item="one" separator=",">#{one}</foreach>)
        <!-- @formatter:on -->
    </select>

    <select id="queryByEntity" parameterType="com.spldeolin.satisficing.security.service.entity.DepartmentEntity"
        resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `department`
        WHERE 1 = 1
          <if test="id!=null"> AND `id` = #{id} </if>
          <if test="departmentName!=null"> AND `department_name` = #{departmentName} </if>
          <if test="path!=null"> AND `path` = #{path} </if>
          <if test="parentId!=null"> AND `parent_id` = #{parentId} </if>
          <if test="description!=null"> AND `description` = #{description} </if>
          <if test="createUserUuid!=null"> AND `create_user_uuid` = #{createUserUuid} </if>
          <if test="createTime!=null"> AND `create_time` = #{createTime} </if>
          <if test="updateUserUuid!=null"> AND `update_user_uuid` = #{updateUserUuid} </if>
          <if test="updateTime!=null"> AND `update_time` = #{updateTime} </if>
        <!-- @formatter:on -->
    </select>

    <select id="listAll" resultMap="all">
        <!-- @formatter:off -->
        SELECT
            <include refid="all"/>
        FROM `department`
        WHERE 1 = 1
        <!-- @formatter:on -->
    </select>

    <insert id="insertOrUpdate" parameterType="com.spldeolin.satisficing.security.service.entity.DepartmentEntity">
        <!-- @formatter:off -->
        INSERT INTO `department`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id!=null"> `id`, </if>
            <if test="departmentName!=null"> `department_name`, </if>
            <if test="path!=null"> `path`, </if>
            <if test="parentId!=null"> `parent_id`, </if>
            <if test="description!=null"> `description`, </if>
            <if test="createUserUuid!=null"> `create_user_uuid`, </if>
            <if test="createTime!=null"> `create_time`, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid`, </if>
            <if test="updateTime!=null"> `update_time`, </if>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <if test="id!=null"> #{id}, </if>
            <if test="departmentName!=null"> #{departmentName}, </if>
            <if test="path!=null"> #{path}, </if>
            <if test="parentId!=null"> #{parentId}, </if>
            <if test="description!=null"> #{description}, </if>
            <if test="createUserUuid!=null"> #{createUserUuid}, </if>
            <if test="createTime!=null"> #{createTime}, </if>
            <if test="updateUserUuid!=null"> #{updateUserUuid}, </if>
            <if test="updateTime!=null"> #{updateTime}, </if>
        </trim>
        ON DUPLICATE KEY UPDATE
        <trim suffixOverrides=",">
            <if test="departmentName!=null"> `department_name` = #{departmentName}, </if>
            <if test="path!=null"> `path` = #{path}, </if>
            <if test="parentId!=null"> `parent_id` = #{parentId}, </if>
            <if test="description!=null"> `description` = #{description}, </if>
            <if test="createUserUuid!=null"> `create_user_uuid` = #{createUserUuid}, </if>
            <if test="createTime!=null"> `create_time` = #{createTime}, </if>
            <if test="updateUserUuid!=null"> `update_user_uuid` = #{updateUserUuid}, </if>
            <if test="updateTime!=null"> `update_time` = #{updateTime}, </if>
        </trim>
        <!-- @formatter:on -->
    </insert>

    <!-- [END] Any modifications may be overwritten by future code generations. -->
</mapper>